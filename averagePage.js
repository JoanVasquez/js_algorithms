/*
WRITE A FUNCTION NAMED AVERAGEPAIR WHICH WILL RECEIVE A SORTED ARRAY INTEGERS AND A TARGET AVERAGE. DETERMINE IF THERE IS A PAIR
OF VALUES IN THE ARRAY, WHERE THE AVERAGE OF THE PAIR EQUALS THE TARGET AVERAGE. THERE MAYBE MORE THAN ONE PAIR THAT MATCHES THE
AVERAGE TARGET.

INPUTS: SORTED ARRAY OF INTEGERS, TARGET AVERAGE (NUMBER -> INTEGER OR FLOAT);
OUTPUT: TRUE || FALSE

EXAMPLE:
[1,2,3], 2.5 => TRUE
[1,2,3,4,5,6,10,12,19], 8 => TRUE
[-1,0,3,4,5,6], 4.1 => FALSE
[], 4 => FALSE
*/

/*
CREATE A FUNCTION NAMED AVERAGEPAIR
    IF ARRAY LENGTH IS ZERO RETURN FALSE
    CREATE POINTERONE = 0 Y POINTERLAST = ARRAY LENGTH - 1

    LOOP ARRAY
    CREATE VAR DIVISION = ARRAY POSITION POINTERONE + ARRAY POSITION POINTERLAST / 2
    IF DIVISION IS EQUAL TO TARGET RETURN TRUE
    ELSE IF DIVISION IS LESS THAN TARGET POINTERONE++
    ELSE POINTERLAST--
*/

function averagePain(arr, target) {
    let pointerOne = 0;
    let pointerLast = arr.length - 1;

    while(pointerOne < pointerLast) {
        let division = arr[pointerOne] + arr[pointerLast] / 2;

        if(target === division) return true;
        else if(division < target) pointerOne++;
        else pointerLast--;
    }

    return false;
}